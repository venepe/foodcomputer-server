{"version":3,"sources":["../static/js/1.a0c9dedf.chunk.js","views/Snapshots/Snapshots.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/defaults.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/Cancel.js","../node_modules/webpack/buildin/module.js","../node_modules/process/browser.js","../node_modules/moment/moment.js","actions/index.js","../node_modules/axios/index.js","../node_modules/axios/lib/axios.js","../node_modules/is-buffer/index.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/btoa.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","config/index.js","utils/MAnalytics.js"],"names":["webpackJsonp","275","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_reactstrap__","__WEBPACK_IMPORTED_MODULE_2_react_redux__","__WEBPACK_IMPORTED_MODULE_3_moment__","__WEBPACK_IMPORTED_MODULE_3_moment___default","__WEBPACK_IMPORTED_MODULE_4__actions__","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","Snapshots","_Component","this","_this","getPrototypeOf","state","snapshots","fetchSnapshots","nextProps","setState","id","history","push","_this2","a","createElement","className","map","snapshot","index","xs","sm","lg","onClick","didClickSnapshot","style","cursor","top","width","src","uri","alt","createdAt","format","mapStateToProps","277","exports","isArray","val","toString","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isObject","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","URLSearchParams","trim","str","replace","isStandardBrowserEnv","navigator","product","window","document","forEach","obj","fn","l","hasOwnProperty","merge","assignValue","result","arguments","extend","b","thisArg","bind","isBuffer","280","process","setContentTypeIfUnset","headers","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","defaults","adapter","XMLHttpRequest","transformRequest","data","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","method","285","args","Array","apply","286","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","config","Promise","resolve","reject","requestData","requestHeaders","request","loadEvent","xDomain","XDomainRequest","url","onprogress","ontimeout","auth","username","password","Authorization","open","toUpperCase","params","paramsSerializer","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseData","responseType","response","responseText","statusText","onerror","cookies","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","287","enhanceError","message","code","error","Error","288","__CANCEL__","289","Cancel","290","webpackPolyfill","deprecate","paths","children","get","292","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","len","run","Item","array","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","293","global","factory","hooks","hookCallback","input","isObjectEmpty","getOwnPropertyNames","k","Date","arr","res","hasOwnProp","valueOf","createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","some","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","copyConfig","to","from","prop","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","firstTime","deprecationHandler","arg","slice","join","stack","deprecateSimple","deprecations","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","addFormatToken","token","padded","callback","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInYear","year","isLeapYear","getIsLeapYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","stringGet","stringSet","prioritized","mod","x","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","globalLocale","oldLocale","locales","_abbr","getSetGlobalLocale","values","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","updateLocale","tmpLocale","listLocales","keys","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","defaultLocaleWeekdaysShort","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","configFromString","aspNetJsonRegex","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","sign","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","toFixed","total","asSeconds","totalSign","ymSign","daysSign","hmsSign","t","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","parseTwoDigitYear","getSetYear","o","defaultLocaleMonths","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","298","fetchTemperaturesAndHumidities","fetchSnapshot","__WEBPACK_IMPORTED_MODULE_0_axios__","__WEBPACK_IMPORTED_MODULE_0_axios___default","__WEBPACK_IMPORTED_MODULE_1__constants_RequestTypes__","__WEBPACK_IMPORTED_MODULE_2__config__","__WEBPACK_IMPORTED_MODULE_3__utils_MAnalytics__","requestTemperaturesAndHumidities","payload","assign","type","REQUEST_TEMP_AND_HUM","receiveTemperaturesAndHumidities","RECEIVE_TEMP_AND_HUM","requestSnapshots","REQUEST_SNAPSHOTS","receiveSnapshots","RECEIVE_SNAPSHOTS","requestSnapshot","REQUEST_SNAPSHOT","receiveSnapshot","RECEIVE_SNAPSHOT","dispatch","VIEWED_TEMPERATURES","endpoints","promises","endpoint","all","temperatures","humidities","VIEWED_SNAPSHOTS","log","getState","VIEWED_SNAPSHOT","find","299","300","createInstance","defaultConfig","context","Axios","axios","instanceConfig","CancelToken","isCancel","spread","default","301","isSlowBuffer","readFloatLE","_isBuffer","302","interceptors","InterceptorManager","dispatchRequest","chain","interceptor","unshift","fulfilled","rejected","303","normalizedName","304","305","306","encode","encodeURIComponent","serializedParams","v","307","ignoreDuplicateOf","parsed","line","308","resolveURL","href","msie","urlParsingNode","setAttribute","protocol","host","search","hash","hostname","port","pathname","originURL","userAgent","location","requestURL","309","block","charCode","String","idx","chars","charCodeAt","310","write","expires","path","domain","secure","cookie","toGMTString","decodeURIComponent","remove","311","handlers","use","eject","312","throwIfCancellationRequested","throwIfRequested","transformData","isAbsoluteURL","combineURLs","baseURL","reason","313","fns","314","315","relativeURL","316","executor","resolvePromise","317","318","projectUrl","319","Events","track","event","properties","mixpanel"],"mappings":"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","file":"static/js/1.a0c9dedf.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 275:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_reactstrap__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(110);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment__ = __webpack_require__(293);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_moment__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__actions__ = __webpack_require__(298);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Snapshots=function(_Component){_inherits(Snapshots,_Component);function Snapshots(props){_classCallCheck(this,Snapshots);var _this=_possibleConstructorReturn(this,(Snapshots.__proto__||Object.getPrototypeOf(Snapshots)).call(this,props));_this.state={snapshots:[]};return _this;}_createClass(Snapshots,[{key:'componentDidMount',value:function componentDidMount(){this.props.fetchSnapshots();}},{key:'componentWillReceiveProps',value:function componentWillReceiveProps(nextProps){if(nextProps.snapshots){this.setState({snapshots:nextProps.snapshots});}}},{key:'didClickSnapshot',value:function didClickSnapshot(id){var history=this.props.history;history.push('/snapshots/'+id);}},{key:'render',value:function render(){var _this2=this;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'animated fadeIn'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"u\" /* Row */],null,this.state.snapshots.map(function(snapshot,index){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"k\" /* Col */],{key:index,xs:'6',sm:'4',lg:'3',onClick:function onClick(){return _this2.didClickSnapshot(snapshot.id);}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"e\" /* Card */],{style:{cursor:\"pointer\"}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"i\" /* CardImg */],{top:true,width:'100%',src:snapshot.uri,alt:snapshot.createdAt}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"f\" /* CardBody */],null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_reactstrap__[\"j\" /* CardTitle */],null,__WEBPACK_IMPORTED_MODULE_3_moment___default()(snapshot.createdAt).format('M/D/YYYY h:mma')))));})));}}]);return Snapshots;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);var mapStateToProps=function mapStateToProps(state){return{snapshots:state.snapshots};};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__[\"b\" /* connect */])(mapStateToProps,{fetchSnapshots:__WEBPACK_IMPORTED_MODULE_4__actions__[\"b\" /* fetchSnapshots */]})(Snapshots));\n\n/***/ }),\n\n/***/ 277:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bind = __webpack_require__(285);\nvar isBuffer = __webpack_require__(301);\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n/***/ }),\n\n/***/ 280:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(277);\nvar normalizeHeaderName = __webpack_require__(303);\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(286);\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(286);\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(292)))\n\n/***/ }),\n\n/***/ 285:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n/***/ }),\n\n/***/ 286:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\nvar settle = __webpack_require__(304);\nvar buildURL = __webpack_require__(306);\nvar parseHeaders = __webpack_require__(307);\nvar isURLSameOrigin = __webpack_require__(308);\nvar createError = __webpack_require__(287);\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(309);\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (\"production\" !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(310);\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n/***/ }),\n\n/***/ 287:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar enhanceError = __webpack_require__(305);\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n/***/ }),\n\n/***/ 288:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n/***/ }),\n\n/***/ 289:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n/***/ }),\n\n/***/ 290:\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n\n/***/ 292:\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n\n/***/ 293:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.1';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(290)(module)))\n\n/***/ }),\n\n/***/ 298:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export requestTemperaturesAndHumidities */\n/* unused harmony export receiveTemperaturesAndHumidities */\n/* unused harmony export requestSnapshots */\n/* unused harmony export receiveSnapshots */\n/* unused harmony export requestSnapshot */\n/* unused harmony export receiveSnapshot */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return fetchTemperaturesAndHumidities; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return fetchSnapshots; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return fetchSnapshot; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios__ = __webpack_require__(299);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_axios___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_axios__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constants_RequestTypes__ = __webpack_require__(111);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config__ = __webpack_require__(318);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_MAnalytics__ = __webpack_require__(319);\nvar requestTemperaturesAndHumidities=function requestTemperaturesAndHumidities(payload){return Object.assign({type:__WEBPACK_IMPORTED_MODULE_1__constants_RequestTypes__[\"a\" /* default */].REQUEST_TEMP_AND_HUM},payload);};var receiveTemperaturesAndHumidities=function receiveTemperaturesAndHumidities(payload){return Object.assign({type:__WEBPACK_IMPORTED_MODULE_1__constants_RequestTypes__[\"a\" /* default */].RECEIVE_TEMP_AND_HUM},payload);};var requestSnapshots=function requestSnapshots(payload){return Object.assign({type:__WEBPACK_IMPORTED_MODULE_1__constants_RequestTypes__[\"a\" /* default */].REQUEST_SNAPSHOTS},payload);};var receiveSnapshots=function receiveSnapshots(payload){return Object.assign({type:__WEBPACK_IMPORTED_MODULE_1__constants_RequestTypes__[\"a\" /* default */].RECEIVE_SNAPSHOTS},payload);};var requestSnapshot=function requestSnapshot(payload){return Object.assign({type:__WEBPACK_IMPORTED_MODULE_1__constants_RequestTypes__[\"a\" /* default */].REQUEST_SNAPSHOT},payload);};var receiveSnapshot=function receiveSnapshot(payload){return Object.assign({type:__WEBPACK_IMPORTED_MODULE_1__constants_RequestTypes__[\"a\" /* default */].RECEIVE_SNAPSHOT},payload);};var fetchTemperaturesAndHumidities=function fetchTemperaturesAndHumidities(){return function(dispatch){dispatch(requestTemperaturesAndHumidities());Object(__WEBPACK_IMPORTED_MODULE_3__utils_MAnalytics__[\"b\" /* track */])(__WEBPACK_IMPORTED_MODULE_3__utils_MAnalytics__[\"a\" /* Events */].VIEWED_TEMPERATURES,{});var endpoints=['temperatures','humidities'];var promises=endpoints.map(function(endpoint,index){return __WEBPACK_IMPORTED_MODULE_0_axios___default.a.get(__WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* projectUrl */]+'/'+endpoint);});Promise.all(promises).then(function(result){var temperatures=result[0].data;var humidities=result[1].data;dispatch(receiveTemperaturesAndHumidities({payload:{temperatures:temperatures,humidities:humidities}}));});};};var fetchSnapshots=function fetchSnapshots(){return function(dispatch){dispatch(requestSnapshots());Object(__WEBPACK_IMPORTED_MODULE_3__utils_MAnalytics__[\"b\" /* track */])(__WEBPACK_IMPORTED_MODULE_3__utils_MAnalytics__[\"a\" /* Events */].VIEWED_SNAPSHOTS,{});__WEBPACK_IMPORTED_MODULE_0_axios___default.a.get(__WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* projectUrl */]+'/snapshots').then(function(result){var snapshots=result.data;console.log(snapshots);dispatch(receiveSnapshots({payload:{snapshots:snapshots}}));});};};var fetchSnapshot=function fetchSnapshot(id){return function(dispatch,getState){dispatch(requestSnapshot());Object(__WEBPACK_IMPORTED_MODULE_3__utils_MAnalytics__[\"b\" /* track */])(__WEBPACK_IMPORTED_MODULE_3__utils_MAnalytics__[\"a\" /* Events */].VIEWED_SNAPSHOT,{id:id});var snapshot=getState().snapshots.find(function(snapshot){if(snapshot.id===id){return snapshot;}});if(snapshot){dispatch(receiveSnapshot({payload:{snapshot:snapshot}}));}else{__WEBPACK_IMPORTED_MODULE_0_axios___default.a.get(__WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* projectUrl */]+'/snapshots/'+id).then(function(result){var snapshot=result.data;dispatch(receiveSnapshot({payload:{snapshot:snapshot}}));});}};};var actions={requestTemperaturesAndHumidities:requestTemperaturesAndHumidities,requestSnapshots:requestSnapshots};/* unused harmony default export */ var _unused_webpack_default_export = (actions);\n\n/***/ }),\n\n/***/ 299:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(300);\n\n/***/ }),\n\n/***/ 300:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\nvar bind = __webpack_require__(285);\nvar Axios = __webpack_require__(302);\nvar defaults = __webpack_require__(280);\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(289);\naxios.CancelToken = __webpack_require__(316);\naxios.isCancel = __webpack_require__(288);\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(317);\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n/***/ }),\n\n/***/ 301:\n/***/ (function(module, exports) {\n\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n/***/ }),\n\n/***/ 302:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(280);\nvar utils = __webpack_require__(277);\nvar InterceptorManager = __webpack_require__(311);\nvar dispatchRequest = __webpack_require__(312);\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n/***/ }),\n\n/***/ 303:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n/***/ }),\n\n/***/ 304:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar createError = __webpack_require__(287);\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n/***/ }),\n\n/***/ 305:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n\n/***/ }),\n\n/***/ 306:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n/***/ }),\n\n/***/ 307:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n/***/ }),\n\n/***/ 308:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n/***/ }),\n\n/***/ 309:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n/***/ }),\n\n/***/ 310:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n/***/ }),\n\n/***/ 311:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n/***/ }),\n\n/***/ 312:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\nvar transformData = __webpack_require__(313);\nvar isCancel = __webpack_require__(288);\nvar defaults = __webpack_require__(280);\nvar isAbsoluteURL = __webpack_require__(314);\nvar combineURLs = __webpack_require__(315);\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n/***/ }),\n\n/***/ 313:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(277);\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n/***/ }),\n\n/***/ 314:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n/***/ }),\n\n/***/ 315:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n/***/ }),\n\n/***/ 316:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Cancel = __webpack_require__(289);\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n/***/ }),\n\n/***/ 317:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n/***/ }),\n\n/***/ 318:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return projectUrl; });\nvar projectUrl='http://138.68.252.0';\n\n/***/ }),\n\n/***/ 319:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Events; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return track; });\n/* global mixpanel */var Events={VIEWED_SNAPSHOT:'viewed snapshot',VIEWED_SNAPSHOTS:'viewed snapshots',VIEWED_TEMPERATURES:'viewed temperatures'};var track=function track(event,properties){if(false){return;}mixpanel.track(event,properties);};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.a0c9dedf.chunk.js","import React, { Component } from 'react';\nimport {\n  Card,\n  CardBody,\n  CardImg,\n  CardTitle,\n  Col,\n  Row,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { fetchSnapshots } from '../../actions';\n\nclass Snapshots extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      snapshots: [],\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchSnapshots();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.snapshots) {\n      this.setState({ snapshots: nextProps.snapshots });\n    }\n  }\n\n  didClickSnapshot(id) {\n    const { history } = this.props;\n    history.push(`/snapshots/${id}`);\n  }\n\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          {this.state.snapshots.map((snapshot, index) => {\n            return (\n              <Col key={index} xs=\"6\" sm=\"4\" lg=\"3\" onClick={() => this.didClickSnapshot(snapshot.id)}>\n                <Card style={{cursor: \"pointer\"}}>\n                  <CardImg top width=\"100%\" src={snapshot.uri} alt={snapshot.createdAt} />\n                  <CardBody>\n                    <CardTitle>{moment(snapshot.createdAt).format('M/D/YYYY h:mma')}</CardTitle>\n                  </CardBody>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  snapshots: state.snapshots,\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchSnapshots },\n)(Snapshots);\n\n\n\n// WEBPACK FOOTER //\n// ./src/views/Snapshots/Snapshots.js","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/utils.js\n// module id = 277\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/defaults.js\n// module id = 280\n// module chunks = 0 1 2","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/bind.js\n// module id = 285\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/adapters/xhr.js\n// module id = 286\n// module chunks = 0 1 2","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/createError.js\n// module id = 287\n// module chunks = 0 1 2","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/isCancel.js\n// module id = 288\n// module chunks = 0 1 2","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/Cancel.js\n// module id = 289\n// module chunks = 0 1 2","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 290\n// module chunks = 0 1 2","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 292\n// module chunks = 0 1 2","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.1';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/moment.js\n// module id = 293\n// module chunks = 0 1 2","import axios from 'axios';\nimport RequestTypes from '../constants/RequestTypes';\nimport { projectUrl } from '../config';\nimport { Events, track } from '../utils/MAnalytics';\n\nexport const requestTemperaturesAndHumidities = payload => ({\n  type: RequestTypes.REQUEST_TEMP_AND_HUM,\n  ...payload,\n});\n\nexport const receiveTemperaturesAndHumidities = payload => ({\n  type: RequestTypes.RECEIVE_TEMP_AND_HUM,\n  ...payload,\n});\n\nexport const requestSnapshots = payload => ({\n  type: RequestTypes.REQUEST_SNAPSHOTS,\n  ...payload,\n});\n\nexport const receiveSnapshots = payload => ({\n  type: RequestTypes.RECEIVE_SNAPSHOTS,\n  ...payload,\n});\n\nexport const requestSnapshot = payload => ({\n  type: RequestTypes.REQUEST_SNAPSHOT,\n  ...payload,\n});\n\nexport const receiveSnapshot = payload => ({\n  type: RequestTypes.RECEIVE_SNAPSHOT,\n  ...payload,\n});\n\nexport const fetchTemperaturesAndHumidities = () =>\n  (dispatch) => {\n    dispatch(requestTemperaturesAndHumidities());\n    track(Events.VIEWED_TEMPERATURES, {});\n    const endpoints = ['temperatures', 'humidities'];\n\n    let promises = endpoints.map((endpoint, index) => axios.get(\n      `${projectUrl}/${endpoint}`));\n\n    Promise.all(promises)\n    .then((result) => {\n      const temperatures = result[0].data;\n      const humidities = result[1].data;\n      dispatch(receiveTemperaturesAndHumidities({ payload: { temperatures, humidities } }));\n    })\n  };\n\nexport const fetchSnapshots = () =>\n  (dispatch) => {\n    dispatch(requestSnapshots());\n    track(Events.VIEWED_SNAPSHOTS, {});\n\n    axios.get(`${projectUrl}/snapshots`)\n      .then((result) => {\n        const snapshots = result.data;\n        console.log(snapshots);\n        dispatch(receiveSnapshots({ payload: { snapshots } }));\n      });\n  };\n\nexport const fetchSnapshot = id =>\n  (dispatch, getState) => {\n    dispatch(requestSnapshot());\n    track(Events.VIEWED_SNAPSHOT, { id });\n\n    const snapshot = getState().snapshots.find((snapshot) => {\n      if (snapshot.id === id) {\n        return snapshot;\n      }\n    });\n\n    if (snapshot) {\n      dispatch(receiveSnapshot({ payload: { snapshot } }));\n    } else {\n      axios.get(`${projectUrl}/snapshots/${id}`)\n        .then((result) => {\n          const snapshot = result.data;\n          dispatch(receiveSnapshot({ payload: { snapshot } }));\n        });\n    }\n  };\n\nconst actions = {\n  requestTemperaturesAndHumidities,\n  requestSnapshots,\n};\n\nexport default actions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/index.js","module.exports = require('./lib/axios');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/index.js\n// module id = 299\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/axios.js\n// module id = 300\n// module chunks = 0 1 2","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-buffer/index.js\n// module id = 301\n// module chunks = 0 1 2","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/Axios.js\n// module id = 302\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/normalizeHeaderName.js\n// module id = 303\n// module chunks = 0 1 2","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/settle.js\n// module id = 304\n// module chunks = 0 1 2","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/enhanceError.js\n// module id = 305\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/buildURL.js\n// module id = 306\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/parseHeaders.js\n// module id = 307\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/isURLSameOrigin.js\n// module id = 308\n// module chunks = 0 1 2","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/btoa.js\n// module id = 309\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/cookies.js\n// module id = 310\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/InterceptorManager.js\n// module id = 311\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/dispatchRequest.js\n// module id = 312\n// module chunks = 0 1 2","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/core/transformData.js\n// module id = 313\n// module chunks = 0 1 2","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/isAbsoluteURL.js\n// module id = 314\n// module chunks = 0 1 2","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/combineURLs.js\n// module id = 315\n// module chunks = 0 1 2","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/cancel/CancelToken.js\n// module id = 316\n// module chunks = 0 1 2","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/axios/lib/helpers/spread.js\n// module id = 317\n// module chunks = 0 1 2","export const projectUrl = 'http://138.68.252.0';\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/index.js","/* global mixpanel */\n\nexport const Events = {\n  VIEWED_SNAPSHOT: 'viewed snapshot',\n  VIEWED_SNAPSHOTS: 'viewed snapshots',\n  VIEWED_TEMPERATURES: 'viewed temperatures',\n}\n\nexport const track = (event, properties) => {\n  if (process.env.NODE_ENV !== 'production') {\n    return;\n  }\n  mixpanel.track(\n    event,\n    properties,\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/MAnalytics.js"],"sourceRoot":""}